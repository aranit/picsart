import { useState, useEffect } from 'react'import './App.css'import { searchPhotos } from './api/pexels'import { generateRandomPastDate } from './helpers/functions'import { Photo, RawPexelsPhoto } from './types/photo'import PhotoCard from './components/PhotoCard'function App() {	const [photos, setPhotos] = useState<Photo[]>([])	const [loading, setLoading] = useState<boolean>(false)	const [error, setError] = useState<string | null>(null)	useEffect(() => {		const fetchPhotos = async () => {			// Set loading to true before making the API call			setLoading(true)			try {				// Fetch 'animal' photos from API				const response = await searchPhotos('animal')				// Add title & dateTaken properties				const enhancedPhotos: Photo[] = response.map(					(photo: RawPexelsPhoto) => ({						...photo,						// Use first 25 characters of the alt text as the title						title: photo.alt?.slice(0, 25) + '.' || 'Untitled',						dateTaken: generateRandomPastDate()					})				)				setPhotos(enhancedPhotos)			} catch (error) {				console.log(`Failed to fetch photos: ${error}`)				setError('Failed to load photos. Please try again.')			} finally {				// Disable loading after API call has finished				setLoading(false)			}		}		fetchPhotos()	}, [])	// Show loading message	if (loading) return <p>Loading photos...</p>	// Show error if any	if (error) return <p>{error}</p>	return (		<div>			{photos.map(photo => (				<PhotoCard key={photo.id} photo={photo} />			))}		</div>	)}export default App