import axios from 'axios'import { RawPexelsPhoto } from '../types/photo'// Load the API key from environment variablesconst API_KEY = import.meta.env.VITE_PEXELS_API_KEYconst BASE_URL = 'https://api.pexels.com/v1'// Throw an error if the API key is missingif (!API_KEY) {	throw new Error('API_KEY is missing in environment variables')}// Create axios instance for Pexels APIconst pexels = axios.create({	baseURL: BASE_URL,	headers: {		Authorization: API_KEY	}})/** * Search for photos from the Pexels API. * @param query - The search string * @param itemsPerPage - Number of results per page * @param page - Number of page * @returns A promise that resolves to an array of RawPexelsPhoto objects */export const searchPhotos = async (	query: string,	itemsPerPage = 30,	page = 1): Promise<RawPexelsPhoto[]> => {	try {		const response = await pexels.get('/search', {			params: { query, per_page: itemsPerPage, page }		})		return response.data.photos	} catch (error) {		console.error('Could not fetch photos:', error)		throw error	}}